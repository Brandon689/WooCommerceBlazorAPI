@page "/products"
@using WooCommerce.MudBlazorWebApp.Services
@using WooCommerceAPI.Models.Services.Foundations.Products
@inject WooCommerceService WooService
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

<h3>Product List</h3>

 @if (Elements == null)
{

<MudPaper Class="pa-4">
    <MudSkeleton Animation="Animation.Wave" Height="20px" Class="mb-2" />
    <MudGrid>
        <MudItem xs="12" sm="6">
            <MudSkeleton Animation="Animation.Wave" Height="20px" />
        </MudItem>
        <MudItem xs="12" sm="6">
            <MudSkeleton Animation="Animation.Wave" Height="20px" />
        </MudItem>
    </MudGrid>
    <MudSkeleton Animation="Animation.Wave" Height="100px" Class="my-2" />
    @for (int i = 0; i < 5; i++)
    {
        <MudGrid>
            <MudItem xs="1">
                <MudSkeleton SkeletonType="SkeletonType.Rectangle" Animation="Animation.Wave" Height="80px" Width="80px" />
            </MudItem>
            <MudItem xs="7">
                <MudSkeleton Animation="Animation.Wave" Height="40px" />
            </MudItem>
            <MudItem xs="4">
                <MudSkeleton Animation="Animation.Wave" Height="40px" />
            </MudItem>
        </MudGrid>
    }
    </MudPaper>
}
else
{
    <MudSwitch @bind-Value="@_selectOnRowClick">Select on row click</MudSwitch>
    <MudText Inline="true">Item: @_selectedItemText</MudText>
    <MudText>Selected items (@selectedItems?.Count)</MudText>
    <MudButton Variant="Variant.Filled" Color="Color.Secondary" OnClick="@(() => EditProductF())">Edit product</MudButton>

    <MudTable @ref="_table" T="ProductResponse" Items="@Elements" MultiSelection="true" @bind-SelectedItems="selectedItems" Hover="true" RowsPerPage="50"
              OnRowClick="@OnRowClick" @bind-SelectOnRowClick="@_selectOnRowClick">
        <HeaderContent>
            <MudTh>Image</MudTh>
            <MudTh>Name</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Image" style="width: 100px;">
            @if (!string.IsNullOrWhiteSpace(context.Images.FirstOrDefault()?.Src))
            {
                <MudImage Src="@context.Images[0].Src" Style="width: 100px; height: 100px;" />
            }
            else
            {
                <span>No Image Available</span>
            }
            </MudTd>
            <MudTd DataLabel="Name">@context.Name</MudTd>
        </RowTemplate>
        <PagerContent>
            <MudTablePager PageSizeOptions="new int[] { 25, 50, 100 }" />
        </PagerContent>
        <FooterContent>
            <MudTd colspan="5">Select All</MudTd>
        </FooterContent>
    </MudTable>
}

@code {
    private HashSet<ProductResponse> selectedItems = new HashSet<ProductResponse>();
    private IEnumerable<ProductResponse> Elements = null;
    private bool _selectOnRowClick = true;
    private MudTable<ProductResponse> _table;
    private string _selectedItemText = "No row clicked";

    protected override async Task OnInitializedAsync()
    {
        var p = await WooService.GetAllProductsAsync();
        Elements = p.Select(x => x.Response);
    }

    private void OnRowClick(TableRowClickEventArgs<ProductResponse> args)
    {
        _selectedItemText = $"{args.Item.Name} ({args.Item.Id})";
    }

    private void EditProductF()
    {
        if (selectedItems.Count == 1)
        {
            Product product = new()
            {
                Response = selectedItems.First()
            };
            WooService.SetCurrentProduct(product);
            NavigationManager.NavigateTo($"/editproduct/{selectedItems.First().Id}");
        }
    }
}
